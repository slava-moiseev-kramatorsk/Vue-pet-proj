{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nimport GenresBook from \"@/components/children/GenresBook\";\nexport default {\n  name: 'EditBook',\n  components: {\n    GenresBook\n  },\n  props: {\n    book: {\n      type: Object,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      currentBook: {\n        id: '',\n        title: '',\n        author: '',\n        page: '',\n        image: null,\n        price: '',\n        genre: '',\n        description: ''\n      },\n      newBook: '',\n      clearBook: {\n        id: '',\n        title: '',\n        author: '',\n        page: '',\n        image: null,\n        price: '',\n        genre: '',\n        description: ''\n      }\n    };\n  },\n\n  computed: { ...mapGetters(['allBooks', 'selected']),\n\n    books() {\n      return this.allBooks;\n    },\n\n    nextIndex() {\n      return this.books.indexOf(this.books[this.books.length - 1]) + 1;\n    }\n\n  },\n  methods: { ...mapActions(['createNewBook']),\n\n    submit() {\n      this.createNewBook({\n        title: this.title,\n        genre: this.genre,\n        author: this.author,\n        page: this.page,\n        image: this.image,\n        price: this.price,\n        description: this.description\n      });\n      this.clearForm();\n    },\n\n    optionSelect(value) {\n      this.genre = value;\n    },\n\n    uploadImage() {\n      this.$refs.fileInput.click();\n    },\n\n    onFileChange(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.imageSrc = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n      this.image = file;\n    },\n\n    clearForm() {\n      this.title = '';\n      this.author = '';\n      this.page = '';\n      this.price = '';\n      this.description = '';\n    }\n\n  },\n  watch: {\n    book: {\n      handler(val) {\n        if (val) {\n          this.currentBook = this.book;\n        } else {\n          this.currentBook = this.clearBook;\n        }\n      },\n\n      deep: true\n    }\n  },\n\n  created() {\n    console.log(this.book.id);\n  }\n\n};","map":{"version":3,"mappings":"AAoDA;AACA;AAKA;EACAA,gBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CAHA;;EASAC;IACA;MACAC;QACAC,MADA;QAEAC,SAFA;QAGAC,UAHA;QAIAC,QAJA;QAKAC,WALA;QAMAC,SANA;QAOAC,SAPA;QAQAC;MARA,CADA;MAWAC,WAXA;MAYAC;QACAT,MADA;QAEAC,SAFA;QAGAC,UAHA;QAIAC,QAJA;QAKAC,WALA;QAMAC,SANA;QAOAC,SAPA;QAQAC;MARA;IAZA;EAuBA,CAjCA;;EAmCAG,YACA,uCADA;;IAGAC;MACA;IACA,CALA;;IAOAC;MACA;IACA;;EATA,CAnCA;EA+CAC,WACA,gCADA;;IAEAC;MACA;QACAb,iBADA;QAEAK,iBAFA;QAGAJ,mBAHA;QAIAC,eAJA;QAKAC,iBALA;QAMAC,iBANA;QAOAE;MAPA;MASA;IACA,CAbA;;IAeAQ;MACA;IACA,CAjBA;;IAmBAC;MACA;IACA,CArBA;;IAuBAC;MACA;MAEA;;MACAC;QACA;MACA,CAFA;;MAGAA;MACA;IACA,CAhCA;;IAkCAC;MACA;MACA;MACA;MACA;MACA;IACA;;EAxCA,CA/CA;EA0FAC;IACAzB;MACA0B;QACA;UACA;QACA,CAFA,MAIA;UACA;QACA;MACA,CATA;;MAUAC;IAVA;EADA,CA1FA;;EAyGAC;IACAC;EACA;;AA3GA","names":["name","components","GenresBook","props","book","type","required","data","currentBook","id","title","author","page","image","price","genre","description","newBook","clearBook","computed","books","nextIndex","methods","submit","optionSelect","uploadImage","onFileChange","reader","clearForm","watch","handler","deep","created","console"],"sourceRoot":"src/components/children","sources":["EditBook.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"header\">\n      <div><router-link to=\"/\" class=\"link1\">Home</router-link></div>\n      <div><router-link to=\"/list-page\" class=\"link1\">Весь список</router-link></div>\n    </div>\n    <div class=\"main-div\">\n\n      <form class=\"form\">\n        <el-input placeholder=\"Ведите название\" v-model=\"currentBook.title\" ></el-input>\n        <label class=\"label\">Ведите название</label>\n        <GenresBook\n            @select=\"optionSelect\"\n        />\n        <label class=\"label\">Ведите жанр</label>\n        <el-input placeholder=\"Ведите имя автора\" v-model=\"currentBook.author\"></el-input>\n        <label class=\"label\">Ведите имя автора</label>\n        <el-input placeholder=\"Ведите количество страниц\" v-model=\"currentBook.page\"></el-input>\n        <label class=\"label\">Ведите количество страниц</label>\n        <el-input type=\"number\" placeholder=\"Цена\" v-model=\"currentBook.price\"></el-input>\n        <label class=\"label\">Цена</label>\n        <el-input\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"Краткое описание\"\n            v-model=\"currentBook.description\"\n        /><label class=\"label\">Краткое описание</label>\n        <el-button type=\"primary\" @click=\"uploadImage\">Загрузить<i class=\"el-icon-upload el-icon-right\" ></i></el-button>\n        <input\n            type=\"file\"\n            accept=\"images/*\"\n            ref=\"fileInput\"\n            style=\"display: none\"\n            @change=\"onFileChange\"\n        >\n        <label class=\"label\">Добавить изображение обложки</label>\n\n        <el-button\n            class=\"btn\"\n            type=\"primary\"\n            plain\n            @click=\"submit\"\n        >Сохранить</el-button>\n      </form>\n    </div>\n    <div>{{books.id}}</div>\n  </div>\n\n</template>\n\n\n<script>\nimport {mapActions , mapGetters} from 'vuex'\nimport GenresBook from \"@/components/children/GenresBook\";\n\n\n\n\nexport default {\n  name: 'EditBook',\n  components: {GenresBook},\n  props:{\n    book: {\n      type: Object,\n      required: true,\n    },\n  },\n  data(){\n    return {\n      currentBook: {\n        id: '',\n        title: '',\n        author: '',\n        page: '',\n        image: null,\n        price: '',\n        genre: '',\n        description: '',\n      },\n      newBook: '',\n      clearBook: {\n        id: '',\n        title: '',\n        author: '',\n        page: '',\n        image: null,\n        price: '',\n        genre: '',\n        description: '',\n      },\n    }\n  },\n\n  computed: {\n    ...mapGetters(['allBooks', 'selected']),\n\n    books(){\n      return this.allBooks\n    },\n\n    nextIndex() {\n      return this.books.indexOf(this.books[this.books.length - 1]) + 1\n    },\n  },\n\n  methods:{\n    ...mapActions(['createNewBook']),\n    submit(){\n      this.createNewBook({\n        title: this.title,\n        genre: this.genre,\n        author: this.author,\n        page: this.page,\n        image: this.image,\n        price: this.price,\n        description: this.description,\n      })\n      this.clearForm()\n    },\n\n    optionSelect(value){\n      this.genre = value\n    },\n\n    uploadImage(){\n      this.$refs.fileInput.click()\n    },\n\n    onFileChange(event){\n      const file = event.target.files[0];\n\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageSrc = reader.result\n      }\n      reader.readAsDataURL(file)\n      this.image = file\n    },\n\n    clearForm(){\n      this.title = ''\n      this.author = ''\n      this.page = ''\n      this.price = ''\n      this.description = ''\n    },\n  },\n\n  watch: {\n    book: {\n      handler(val) {\n        if (val){\n          this.currentBook = this.book;\n        }\n        else\n        {\n          this.currentBook = this.clearBook;\n        }\n      },\n      deep: true,\n    },\n  },\n\n  created(){\n    console.log(this.book.id);\n  },\n}\n\n\n</script>\n\n<style scoped>\n.btn{\n  width: auto;\n}\n.main-div{\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.form{\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n\n}\n.label{\n  text-align: left;\n  font-size: 15px;\n  margin-top: 10px;\n  margin-bottom: 15px;\n}\n.header{\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  justify-items: left;\n  align-items: center;\n  width: auto;\n  height: 70px;\n  background-color: steelblue;\n}\n.link1{\n  text-decoration: none;\n  color: aliceblue;\n  font-size: 25px;\n  font-family: fantasy, sans-serif;\n}\n</style>"]},"metadata":{},"sourceType":"module"}