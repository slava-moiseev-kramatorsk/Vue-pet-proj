{"ast":null,"code":"import { mapActions, mapGetters } from 'vuex';\nimport GenresBook from \"@/components/children/GenresBook\";\nexport default {\n  components: {\n    GenresBook\n  },\n  props: [],\n\n  data() {\n    return {\n      id: 10,\n      title: '',\n      author: '',\n      page: '',\n      image: null,\n      imageSrc: '',\n      price: '',\n      genre: '',\n      description: ''\n    };\n  },\n\n  computed: { ...mapGetters(['allBooks', 'selected']),\n\n    books() {\n      return this.allBooks;\n    },\n\n    nextIndex() {\n      return this.books.indexOf(this.books[this.books.length - 1]) + 1;\n    }\n\n  },\n  methods: { ...mapActions(['createNewBook']),\n\n    submit() {\n      this.createNewBook({\n        title: this.title,\n        genre: this.genre,\n        author: this.author,\n        page: this.page,\n        image: this.image,\n        price: this.price,\n        description: this.description\n      });\n      this.clearForm();\n      console.log(this.title);\n    },\n\n    optionSelect(value) {\n      this.genre = value; // console.log(this.genre)\n    },\n\n    uploadImage() {\n      this.$refs.fileInput.click();\n    },\n\n    onFileChange(event) {\n      const file = event.target.files[0];\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.imageSrc = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n      this.image = file;\n    },\n\n    clearForm() {\n      this.title = '';\n      this.author = '';\n      this.page = '';\n      this.price = '';\n      this.description = '';\n    }\n    /*submit(){*/\n\n    /*  db.ref('books').child(this.nextIndex)*/\n    //       .set({\n    //         title: this.title,\n    //         genre: this.genre,\n    //         author: this.author,\n    //         page: this.page,\n    //         image: this.image,\n    //         price: this.price,\n    //         description: this.description,\n    //       })\n    //   eventBus.$emit('update');\n    //   this.clearForm();\n    // },\n\n\n  }\n};","map":{"version":3,"mappings":"AAkDA;AACA;AAKA;EACAA;IAAAC;EAAA,CADA;EAEAC,SAFA;;EAIAC;IACA;MACAC,MADA;MAEAC,SAFA;MAGAC,UAHA;MAIAC,QAJA;MAKAC,WALA;MAMAC,YANA;MAOAC,SAPA;MAQAC,SARA;MASAC;IATA;EAaA,CAlBA;;EAmBAC,YACA,uCADA;;IAGAC;MACA;IACA,CALA;;IAOAC;MACA;IACA;;EATA,CAnBA;EA8BAC,WACA,gCADA;;IAEAC;MACA;QACAZ,iBADA;QAEAM,iBAFA;QAGAL,mBAHA;QAIAC,eAJA;QAKAC,iBALA;QAMAE,iBANA;QAOAE;MAPA;MASA;MACAM;IACA,CAdA;;IAgBAC;MACA,mBADA,CAEA;IACA,CAnBA;;IAoBAC;MACA;IACA,CAtBA;;IAuBAC;MACA;MAEA;;MACAC;QACA;MACA,CAFA;;MAGAA;MACA;IACA,CAhCA;;IAkCAC;MACA;MACA;MACA;MACA;MACA;IACA;IACA;;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAtDA;AA9BA","names":["components","GenresBook","props","data","id","title","author","page","image","imageSrc","price","genre","description","computed","books","nextIndex","methods","submit","console","optionSelect","uploadImage","onFileChange","reader","clearForm"],"sourceRoot":"src/components/children","sources":["NewBook.vue"],"sourcesContent":["<template>\n<div>\n        <div class=\"header\">\n          <div><router-link to=\"/\" class=\"link1\">Home</router-link></div>\n          <div><router-link to=\"/list-page\" class=\"link1\">Весь список</router-link></div>\n        </div>\n       <div class=\"main-div\">\n\n         <form class=\"form\">\n           <el-input placeholder=\"Ведите название\" v-model=\"title\"></el-input>\n           <label class=\"label\">Ведите название</label>\n           <GenresBook\n               @select=\"optionSelect\"\n           />\n           <label class=\"label\">Ведите жанр</label>\n           <el-input placeholder=\"Ведите имя автора\" v-model=\"author\"></el-input>\n           <label class=\"label\">Ведите имя автора</label>\n           <el-input placeholder=\"Ведите количество страниц\" v-model=\"page\"></el-input>\n           <label class=\"label\">Ведите количество страниц</label>\n           <el-input type=\"number\" placeholder=\"Цена\" v-model=\"price\"></el-input>\n           <label class=\"label\">Цена</label>\n           <el-input\n             type=\"textarea\"\n             :rows=\"3\"\n             placeholder=\"Краткое описание\"\n             v-model=\"description\"\n           /><label class=\"label\">Краткое описание</label>\n           <el-button type=\"primary\" @click=\"uploadImage\">Загрузить<i class=\"el-icon-upload el-icon-right\" ></i></el-button>\n           <input\n               type=\"file\"\n               accept=\"images/*\"\n               ref=\"fileInput\"\n               style=\"display: none\"\n               @change=\"onFileChange\"\n           >\n           <label class=\"label\">Добавить изображение обложки</label>\n\n           <el-button\n             class=\"btn\"\n             type=\"primary\"\n             plain\n             @click=\"submit\"\n           >Сохранить</el-button>\n         </form>\n       </div>\n</div>\n</template>\n\n\n<script>\nimport {mapActions , mapGetters} from 'vuex'\nimport GenresBook from \"@/components/children/GenresBook\";\n\n\n\n\nexport default {\n  components: {GenresBook},\n  props:[\n  ],\n  data(){\n    return {\n      id: 10,\n      title: '',\n      author: '',\n      page: '',\n      image: null,\n      imageSrc:'',\n      price: '',\n      genre:'',\n      description: '',\n\n      }\n\n  },\n  computed: {\n    ...mapGetters(['allBooks', 'selected']),\n\n    books(){\n      return this.allBooks\n    },\n\n    nextIndex() {\n      return this.books.indexOf(this.books[this.books.length - 1]) + 1\n    },\n  },\n  methods:{\n    ...mapActions(['createNewBook']),\n    submit(){\n      this.createNewBook({\n        title: this.title,\n        genre: this.genre,\n        author: this.author,\n        page: this.page,\n        image: this.image,\n        price: this.price,\n        description: this.description,\n      })\n      this.clearForm()\n      console.log(this.title)\n    },\n\n    optionSelect(value){\n      this.genre = value\n      // console.log(this.genre)\n    },\n    uploadImage(){\n      this.$refs.fileInput.click()\n    },\n    onFileChange(event){\n      const file = event.target.files[0];\n\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imageSrc = reader.result\n      }\n      reader.readAsDataURL(file)\n      this.image = file\n    },\n\n    clearForm(){\n          this.title = ''\n          this.author = ''\n          this.page = ''\n          this.price = ''\n          this.description = ''\n    },\n    /*submit(){*/\n    /*  db.ref('books').child(this.nextIndex)*/\n    //       .set({\n    //         title: this.title,\n    //         genre: this.genre,\n    //         author: this.author,\n    //         page: this.page,\n    //         image: this.image,\n    //         price: this.price,\n    //         description: this.description,\n    //       })\n    //   eventBus.$emit('update');\n    //   this.clearForm();\n    // },\n  },\n}\n\n\n</script>\n\n<style scoped>\n.btn{\n  width: auto;\n}\n.main-div{\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.form{\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n\n}\n.label{\n  text-align: left;\n  font-size: 15px;\n  margin-top: 10px;\n  margin-bottom: 15px;\n}\n.header{\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  justify-items: left;\n  align-items: center;\n  width: auto;\n  height: 70px;\n  background-color: steelblue;\n}\n.link1{\n  text-decoration: none;\n  color: aliceblue;\n  font-size: 25px;\n  font-family: fantasy, sans-serif;\n}\n</style>"]},"metadata":{},"sourceType":"module"}